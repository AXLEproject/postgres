diff --git a/.gitignore b/.gitignore
index 3d28fe0..7502b64 100644
--- a/.gitignore
+++ b/.gitignore
@@ -33,3 +33,8 @@ lib*.pc
 /pgsql.sln.cache
 /Debug/
 /Release/
+
+# My ignored folders
+data/
+local/
+build/
diff --git a/configure b/configure
index f9da1de..f45ea61 100755
--- a/configure
+++ b/configure
@@ -2874,6 +2874,11 @@ case ${blocksize} in
   8) BLCKSZ=8192;;
  16) BLCKSZ=16384;;
  32) BLCKSZ=32768;;
+ 64) BLCKSZ=65536;;
+ 128) BLCKSZ=131072;;
+ 256) BLCKSZ=262144;;
+ 512) BLCKSZ=524288;;
+ 1024) BLCKSZ=1048576;;
   *) { { $as_echo "$as_me:$LINENO: error: Invalid block size. Allowed values are 1,2,4,8,16,32." >&5
 $as_echo "$as_me: error: Invalid block size. Allowed values are 1,2,4,8,16,32." >&2;}
    { (exit 1); exit 1; }; }
diff --git a/install.sh b/install.sh
new file mode 100755
index 0000000..77c513d
--- /dev/null
+++ b/install.sh
@@ -0,0 +1,28 @@
+#!/bin/bash -e
+
+BASEDIR=$(dirname "$0")
+BASEDIR=$(cd "$BASEDIR"; pwd)
+
+MAKETEXT='
+CFLAGS+=-mno-sse4 -mno-sse4.1 -mno-sse4.2 -mno-sse4a -mno-avx -I${ZSIMPATH}/misc/hooks\n
+'
+
+DEST=$BASEDIR/build/bin/postgres
+
+if [ ! -r $DEST ] || [ $(find src -newer $DEST | wc -l) -gt 0 ]; then
+        # compile
+        mkdir -p $BASEDIR/build
+        cd $BASEDIR/build
+        CFLAGS="-fno-omit-frame-pointer -rdynamic" $BASEDIR/configure --prefix=$BASEDIR/build --enable-debug --with-blocksize=32 --with-wal-blocksize=64
+        make clean
+        echo -e $MAKETEXT >> $BASEDIR/build/src/Makefile.global
+        make -j$(grep -c ^processor /proc/cpuinfo)
+        make install
+        echo "done. Cleaning intermediate make state"
+        make clean
+else
+        echo ""
+        echo "Already up to date. Skip compilation."
+fi
+
+echo "Add 'PGPATH=$BASEDIR' to your environment."
diff --git a/src/backend/access/transam/xlog.c b/src/backend/access/transam/xlog.c
index 06f5eb0..dc7d29d 100644
--- a/src/backend/access/transam/xlog.c
+++ b/src/backend/access/transam/xlog.c
@@ -2350,8 +2350,8 @@ XLogCheckBuffer(XLogRecData *rdata, bool holdsExclusiveLock,
 		if (rdata->buffer_std)
 		{
 			/* Assume we can omit data between pd_lower and pd_upper */
-			uint16		lower = ((PageHeader) page)->pd_lower;
-			uint16		upper = ((PageHeader) page)->pd_upper;
+			uint32		lower = ((PageHeader) page)->pd_lower;
+			uint32		upper = ((PageHeader) page)->pd_upper;
 
 			if (lower >= SizeOfPageHeaderData &&
 				upper > lower &&
diff --git a/src/backend/catalog/heap.c b/src/backend/catalog/heap.c
index 64ca312..006b7a3 100644
--- a/src/backend/catalog/heap.c
+++ b/src/backend/catalog/heap.c
@@ -134,7 +134,7 @@ static List *insert_ordered_unique_oid(List *list, Oid datum);
 static FormData_pg_attribute a1 = {
 	0, {"ctid"}, TIDOID, 0, sizeof(ItemPointerData),
 	SelfItemPointerAttributeNumber, 0, -1, -1,
-	false, 'p', 's', true, false, false, true, 0
+	false, 'p', 'i', true, false, false, true, 0
 };
 
 static FormData_pg_attribute a2 = {
diff --git a/src/backend/postmaster/postmaster.c b/src/backend/postmaster/postmaster.c
index 98086f7..bf557c9 100644
--- a/src/backend/postmaster/postmaster.c
+++ b/src/backend/postmaster/postmaster.c
@@ -127,7 +127,6 @@
 #include "storage/spin.h"
 #endif
 
-
 /*
  * Possible types of a backend. Beyond being the possible bkend_type values in
  * struct bkend, these are OR-able request flag bits for SignalSomeChildren()
diff --git a/src/backend/storage/buffer/freelist.c b/src/backend/storage/buffer/freelist.c
index c76aaf7..fc40040 100644
--- a/src/backend/storage/buffer/freelist.c
+++ b/src/backend/storage/buffer/freelist.c
@@ -422,13 +422,13 @@ GetAccessStrategy(BufferAccessStrategyType btype)
 			return NULL;
 
 		case BAS_BULKREAD:
-			ring_size = 256 * 1024 / BLCKSZ;
+			ring_size = 16 * 1024 * 1024 / BLCKSZ;
 			break;
 		case BAS_BULKWRITE:
 			ring_size = 16 * 1024 * 1024 / BLCKSZ;
 			break;
 		case BAS_VACUUM:
-			ring_size = 256 * 1024 / BLCKSZ;
+			ring_size = 16 * 1024 * 1024 / BLCKSZ;
 			break;
 
 		default:
diff --git a/src/backend/tcop/postgres.c b/src/backend/tcop/postgres.c
index 1eaf287..bdc8e84 100644
--- a/src/backend/tcop/postgres.c
+++ b/src/backend/tcop/postgres.c
@@ -76,6 +76,7 @@
 #include "utils/timestamp.h"
 #include "mb/pg_wchar.h"
 
+#include "zsim_hooks.h"
 
 extern char *optarg;
 extern int	optind;
@@ -836,7 +837,6 @@ exec_simple_query(const char *query_string)
 	bool		isTopLevel;
 	char		msec_str[32];
 
-
 	/*
 	 * Report query to various monitoring facilities.
 	 */
@@ -1132,6 +1132,7 @@ exec_simple_query(const char *query_string)
 	TRACE_POSTGRESQL_QUERY_DONE(query_string);
 
 	debug_query_string = NULL;
+
 }
 
 /*
@@ -3526,6 +3527,12 @@ PostgresMain(int argc, char *argv[],
 			 const char *dbname,
 			 const char *username)
 {
+        /*
+         * AAS: Start of the ROI
+         */
+         zsim_roi_begin();
+         zsim_heartbeat();
+
 	int			firstchar;
 	StringInfoData input_message;
 	sigjmp_buf	local_sigjmp_buf;
@@ -4211,6 +4218,13 @@ PostgresMain(int argc, char *argv[],
 				 * it will fail to be called during other backend-shutdown
 				 * scenarios.
 				 */
+
+                                /*
+                                 * AAS: End of the ROI
+                                 */
+                                 zsim_heartbeat();
+                                 zsim_roi_end();
+
 				proc_exit(0);
 
 			case 'd':			/* copy data */
diff --git a/src/bin/psql/startup.c b/src/bin/psql/startup.c
index a45ec55..507f792 100644
--- a/src/bin/psql/startup.c
+++ b/src/bin/psql/startup.c
@@ -28,6 +28,7 @@
 #include "mainloop.h"
 #include "settings.h"
 
+#include "zsim_hooks.h"
 
 
 /*
@@ -270,6 +271,12 @@ main(int argc, char *argv[])
 	 * Now find something to do
 	 */
 
+        /*
+         * AAS: Start of the ROI
+         */
+        zsim_roi_begin();
+        zsim_heartbeat();
+
 	/*
 	 * process file given by -f
 	 */
@@ -329,6 +336,12 @@ main(int argc, char *argv[])
 		successResult = MainLoop(stdin);
 	}
 
+        /*
+         * AAS: End of the ROI
+         */
+        zsim_heartbeat();
+        zsim_roi_end();
+
 	/* clean up */
 	if (pset.logfile)
 		fclose(pset.logfile);
diff --git a/src/include/access/gin_private.h b/src/include/access/gin_private.h
index 7af3a87..53f7d38 100644
--- a/src/include/access/gin_private.h
+++ b/src/include/access/gin_private.h
@@ -148,14 +148,14 @@ typedef struct GinMetaPageData
 	(GinItemPointerGetOffsetNumber(p) == (OffsetNumber)0 && \
 	 GinItemPointerGetBlockNumber(p) == (BlockNumber)0)
 #define ItemPointerSetMax(p)  \
-	ItemPointerSet((p), InvalidBlockNumber, (OffsetNumber)0xffff)
+	ItemPointerSet((p), InvalidBlockNumber, (OffsetNumber)0xffffffff)
 #define ItemPointerIsMax(p)  \
-	(GinItemPointerGetOffsetNumber(p) == (OffsetNumber)0xffff && \
+	(GinItemPointerGetOffsetNumber(p) == (OffsetNumber)0xffffffff && \
 	 GinItemPointerGetBlockNumber(p) == InvalidBlockNumber)
 #define ItemPointerSetLossyPage(p, b)  \
-	ItemPointerSet((p), (b), (OffsetNumber)0xffff)
+	ItemPointerSet((p), (b), (OffsetNumber)0xffffffff)
 #define ItemPointerIsLossyPage(p)  \
-	(GinItemPointerGetOffsetNumber(p) == (OffsetNumber)0xffff && \
+	(GinItemPointerGetOffsetNumber(p) == (OffsetNumber)0xffffffff && \
 	 GinItemPointerGetBlockNumber(p) != InvalidBlockNumber)
 
 /*
@@ -206,7 +206,7 @@ typedef signed char GinNullCategory;
  */
 #define GinGetNPosting(itup)	GinItemPointerGetOffsetNumber(&(itup)->t_tid)
 #define GinSetNPosting(itup,n)	ItemPointerSetOffsetNumber(&(itup)->t_tid,n)
-#define GIN_TREE_POSTING		((OffsetNumber)0xffff)
+#define GIN_TREE_POSTING		((OffsetNumber)0xffffffff)
 #define GinIsPostingTree(itup)	(GinGetNPosting(itup) == GIN_TREE_POSTING)
 #define GinSetPostingTree(itup, blkno)	( GinSetNPosting((itup),GIN_TREE_POSTING), ItemPointerSetBlockNumber(&(itup)->t_tid, blkno) )
 #define GinGetPostingTree(itup) GinItemPointerGetBlockNumber(&(itup)->t_tid)
diff --git a/src/include/access/xlog_internal.h b/src/include/access/xlog_internal.h
index c3e1731..27225b4 100644
--- a/src/include/access/xlog_internal.h
+++ b/src/include/access/xlog_internal.h
@@ -46,8 +46,8 @@ typedef struct BkpBlock
 	RelFileNode node;			/* relation containing block */
 	ForkNumber	fork;			/* fork within the relation */
 	BlockNumber block;			/* block number */
-	uint16		hole_offset;	/* number of bytes before "hole" */
-	uint16		hole_length;	/* number of bytes in "hole" */
+	uint32		hole_offset;	/* number of bytes before "hole" */
+	uint32		hole_length;	/* number of bytes in "hole" */
 
 	/* ACTUAL BLOCK DATA FOLLOWS AT END OF STRUCT */
 } BkpBlock;
diff --git a/src/include/catalog/pg_type.h b/src/include/catalog/pg_type.h
index 2081312..c2cf641 100644
--- a/src/include/catalog/pg_type.h
+++ b/src/include/catalog/pg_type.h
@@ -327,7 +327,7 @@ DATA(insert OID = 26 (	oid		   PGNSP PGUID	4 t b N t t \054 0	 0 1028 oidin oido
 DESCR("object identifier(oid), maximum 4 billion");
 #define OIDOID			26
 
-DATA(insert OID = 27 (	tid		   PGNSP PGUID	6 f b U f t \054 0	 0 1010 tidin tidout tidrecv tidsend - - - s p f 0 -1 0 0 _null_ _null_ _null_ ));
+DATA(insert OID = 27 (	tid		   PGNSP PGUID	8 f b U f t \054 0	 0 1010 tidin tidout tidrecv tidsend - - - i p f 0 -1 0 0 _null_ _null_ _null_ ));
 DESCR("(block, offset), physical location of tuple");
 #define TIDOID		27
 
diff --git a/src/include/storage/bufpage.h b/src/include/storage/bufpage.h
index abcf8a0..8db34e3 100644
--- a/src/include/storage/bufpage.h
+++ b/src/include/storage/bufpage.h
@@ -77,10 +77,10 @@ typedef Pointer Page;
 /*
  * location (byte offset) within a page.
  *
- * note that this is actually limited to 2^15 because we have limited
- * ItemIdData.lp_off and ItemIdData.lp_len to 15 bits (see itemid.h).
+ * note that this is actually limited to 2^20 because we have limited
+ * ItemIdData.lp_off and ItemIdData.lp_len to 20 bits (see itemid.h).
  */
-typedef uint16 LocationIndex;
+typedef uint32 LocationIndex;
 
 
 /*
@@ -154,7 +154,7 @@ typedef struct PageHeaderData
 	LocationIndex pd_lower;		/* offset to start of free space */
 	LocationIndex pd_upper;		/* offset to end of free space */
 	LocationIndex pd_special;	/* offset to start of special space */
-	uint16		pd_pagesize_version;
+	uint32		pd_pagesize_version;
 	TransactionId pd_prune_xid; /* oldest prunable XID, or zero if none */
 	ItemIdData	pd_linp[1];		/* beginning of line pointer array */
 } PageHeaderData;
@@ -263,7 +263,7 @@ typedef PageHeaderData *PageHeader;
  * however, it can be called on a page that is not stored in a buffer.
  */
 #define PageGetPageSize(page) \
-	((Size) (((PageHeader) (page))->pd_pagesize_version & (uint16) 0xFF00))
+	((Size) (((PageHeader) (page))->pd_pagesize_version & (uint32) 0xFFFFFF00))
 
 /*
  * PageGetPageLayoutVersion
@@ -281,7 +281,7 @@ typedef PageHeaderData *PageHeader;
  */
 #define PageSetPageSizeAndVersion(page, size, version) \
 ( \
-	AssertMacro(((size) & 0xFF00) == (size)), \
+	AssertMacro(((size) & 0xFFFFFF00) == (size)), \
 	AssertMacro(((version) & 0x00FF) == (version)), \
 	((PageHeader) (page))->pd_pagesize_version = (size) | (version) \
 )
diff --git a/src/include/storage/itemid.h b/src/include/storage/itemid.h
index b8c22aa..2daaf23e 100644
--- a/src/include/storage/itemid.h
+++ b/src/include/storage/itemid.h
@@ -23,9 +23,9 @@
  */
 typedef struct ItemIdData
 {
-	unsigned	lp_off:15,		/* offset to tuple (from start of page) */
+	unsigned	lp_off:20,		/* offset to tuple (from start of page) */
 				lp_flags:2,		/* state of item pointer, see below */
-				lp_len:15;		/* byte length of tuple */
+				lp_len:20;		/* byte length of tuple */
 } ItemIdData;
 
 typedef ItemIdData *ItemId;
diff --git a/src/include/storage/off.h b/src/include/storage/off.h
index e991484..d07c129 100644
--- a/src/include/storage/off.h
+++ b/src/include/storage/off.h
@@ -21,12 +21,12 @@
  * this is a 1-based index into the linp (ItemIdData) array in the
  * header of each disk page.
  */
-typedef uint16 OffsetNumber;
+typedef uint32 OffsetNumber;
 
 #define InvalidOffsetNumber		((OffsetNumber) 0)
 #define FirstOffsetNumber		((OffsetNumber) 1)
 #define MaxOffsetNumber			((OffsetNumber) (BLCKSZ / sizeof(ItemIdData)))
-#define OffsetNumberMask		(0xffff)		/* valid uint16 bits */
+#define OffsetNumberMask		(0xffffffff)		/* valid uint32 bits */
 
 /* ----------------
  *		support macros
